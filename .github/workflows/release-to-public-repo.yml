# This workflow generates document and push to gh-pages

name: Release to public repo

# Controls when the workflow will run
on:
  workflow_dispatch:
    branches:
      - '*'
    inputs:
      release_version:
        required: true
        description: Release version

env:
  repo_user: heguanyu
  destination_path: TestGithubCIPubicRepo

jobs:
  create-doc-and-push-to-another-repo:
    runs-on: macos-11
    steps:
      # Checkout both repos
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.2.1'
      - uses: actions/checkout@v3
        with:
          path: main
          fetch-depth: 0
      - name: Checkout destination repo
        uses: actions/checkout@v3
        with:
          repository: ${{env.repo_user}}/${{env.destination_path}}
          path: ${{env.destination_path}}
          token: ${{secrets.RELEASE_TOKEN}}
      - uses: actions/setup-node@v3
      - name: Setup the codebase
        run: |
          cd main
          bundle install
          fastlane build_dependencies

      - name: Copy doc archive from destination
        run: |
          rm -rf main/webui/public/doc_archives
          mkdir -p main/webui/public/doc_archives
          cp -r ${{env.destination_path}}/doc_archives/* main/webui/public/doc_archives
      # Release on self repo. Also generate documentations
      - name: build-and-release-on-main-repo
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          cd main
          fastlane create_release version:${{github.event.inputs.release_version}} shadow_repo:${{env.repo_user}}/${{env.destination_path}}
          fastlane gen_web_ui_to_docs version:${{github.event.inputs.release_version}}

      # Copy docs to the destination repo
      - name: Copy doc to destination
        run: |
          rm -rf ${{env.destination_path}}/binaries/${{github.event.inputs.release_version}}
          mkdir -p ${{env.destination_path}}/binaries/${{github.event.inputs.release_version}}
          cp -r main/build/TestXCFramework-${{github.event.inputs.release_version}}.zip ${{env.destination_path}}/binaries/${{github.event.inputs.release_version}}
          
          rm -rf ${{env.destination_path}}/docs
          mkdir -p ${{env.destination_path}}/docs
          cp -r main/docs/* ${{env.destination_path}}/docs/
          
          rm -rf ${{env.destination_path}}/doc_archives/${{github.event.inputs.release_version}}
          mkdir -p ${{env.destination_path}}/doc_archives/${{github.event.inputs.release_version}}
          cp -r main/jazzydocs/* ${{env.destination_path}}/doc_archives/${{github.event.inputs.release_version}}/

      # Checkin the docs to destination remote
      - name: Goto the dest repo and commit
        run: |
          cd ${{env.destination_path}}
          pwd
          git add --force docs
          git add binaries/${{github.event.inputs.release_version}}/TestXCFramework-${{github.event.inputs.release_version}}.zip
          git add --force doc_archives/${{github.event.inputs.release_version}}
          git commit -a -m "Update the docs and the framework"
          git push origin main

      # Send release as attachment is in destination repo
      - name: Goto main repo and pod push
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
          cd main
          fastlane publishToCocoapod
